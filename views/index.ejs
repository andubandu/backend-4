<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 p-8">
    <div id="editModal" class="fixed inset-0 bg-black/50 hidden flex items-center justify-center z-50">
        <form id="editForm" class="bg-white p-6 rounded-lg max-w-md w-full mx-4 space-y-4">
            <input type="hidden" id="editProductId">
            <input type="text" id="editName" class="w-full p-2 border rounded" placeholder="Name">
            <input type="text" id="editImg" class="w-full p-2 border rounded" placeholder="Image URL">
            <input type="number" id="editPrice" class="w-full p-2 border rounded" placeholder="Price" step="0.01">
            <textarea id="editDescription" class="w-full p-2 border rounded" placeholder="Description"></textarea>
            <div class="flex gap-2">
                <button type="submit" class="flex-1 bg-blue-500 text-white p-2 rounded">Save</button>
                <button type="button" onclick="toggleModal('editModal', false)" class="flex-1 bg-gray-200 p-2 rounded">Cancel</button>
            </div>
        </form>
    </div>

    <div id="deleteModal" class="fixed inset-0 bg-black/50 hidden flex items-center justify-center z-50">
        <div class="bg-white p-6 rounded-lg max-w-md w-full mx-4 space-y-4">
            <p class="text-center text-lg">Delete Product?</p>
            <div class="flex gap-2">
                <button id="confirmDelete" class="flex-1 bg-red-500 text-white p-2 rounded">Delete</button>
                <button type="button" onclick="toggleModal('deleteModal', false)" class="flex-1 bg-gray-200 p-2 rounded">Cancel</button>
            </div>
        </div>
    </div>

    <h1 class="text-3xl font-bold text-center mb-8">Products</h1>
    <div class="text-center mb-4">
        <a href="createProduct" type="button" class="text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 transition-all duration-300">Add Product</a>
    </div>
    <div id="productContainer" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4"></div>

    <script>
        const apiUrl = `${window.location.origin}/products`;
        const editForm = document.getElementById('editForm');
        const confirmDelete = document.getElementById('confirmDelete');
        const productContainer = document.getElementById('productContainer');

        let deleteProductId = null;

        function toggleModal(modalId, show) {
            document.getElementById(modalId).classList.toggle('hidden', !show);
        }
        function openEditModal(product) {
            document.getElementById('editProductId').value = product.id;
            document.getElementById('editName').value = product.name;
            document.getElementById('editImg').value = product.img;
            document.getElementById('editPrice').value = product.price;
            document.getElementById('editDescription').value = product.description;
            toggleModal('editModal', true);
        }

        function openDeleteModal(id) {
            deleteProductId = id;
            toggleModal('deleteModal', true);
        }

        async function loadProducts() {
            try {
                const res = await fetch(apiUrl);
                const products = await res.json();
                productContainer.innerHTML = products.map(product => `
                    <div class="bg-white p-4 rounded-lg shadow hover:shadow-lg transition-shadow">
                        <img src="${product.img}" alt="${product.name}" class="w-full h-48 object-contain rounded mb-4 cursor-pointer" onclick="window.location.href='/item/${product.id}'">
                        <div class="flex justify-between items-start mb-2">
                            <h3 class="font-semibold">${product.name}</h3>
                            <div class="flex gap-2">
                                <button onclick='openEditModal(${JSON.stringify(product)})' class="text-blue-500">‚úèÔ∏è</button>
                                <button onclick='openDeleteModal(${product.id})' class="text-red-500">üóëÔ∏è</button>
                            </div>
                        </div>
                        <p class="text-xl font-bold text-blue-500 mb-2">$${product.price.toFixed(2)}</p>
                        <p class="text-gray-700 mb-2">${product.description}</p>
                        <a href="/item/${product.id}" class="block bg-blue-500 text-white text-center p-2 rounded hover:bg-blue-600">View Details</a>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Failed to load products:', error);
                productContainer.innerHTML = '<p class="text-red-500 text-center col-span-full">Failed to load products</p>';
            }
        }

        editForm.onsubmit = async e => {
            e.preventDefault();
            const id = document.getElementById('editProductId').value;
            const data = {
                name: document.getElementById('editName').value,
                img: document.getElementById('editImg').value,
                price: parseFloat(document.getElementById('editPrice').value),
                description: document.getElementById('editDescription').value
            };

            try {
                const res = await fetch(`${apiUrl}/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                if (res.ok) {
                    toggleModal('editModal', false);
                    loadProducts();
                }
            } catch (error) {
                console.error('Error updating product:', error);
            }
        };

        confirmDelete.onclick = async () => {
            if (!deleteProductId) return;
            try {
                const res = await fetch(`${apiUrl}/${deleteProductId}`, { method: 'DELETE' });
                if (res.ok) {
                    toggleModal('deleteModal', false);
                    loadProducts();
                }
            } catch (error) {
                console.error('Error deleting product:', error);
            }
        };

        loadProducts();
    </script>
</body>
</html>
